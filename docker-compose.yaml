version: "3.9"

networks:
  service_network:

services:

  bet_maker_db:
    networks:
      - service_network
    container_name: bet_maker_db
    image: postgres:14-alpine
    ports:
      - "5435:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 15s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bet_maker_db
    volumes:
      - ./pg_bet_maker_data:/var/lib/postgresql/data
    restart: always
    depends_on:
      rabbitmq:
        condition: service_started

  line_provider_db:
    networks:
      - service_network
    container_name: line_provider_db
    image: postgres:14-alpine
    ports:
      - "5436:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 15s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: line_provider_db
    volumes:
      - ./pg_line_provider_data:/var/lib/postgresql/data
    restart: always
    depends_on:
      rabbitmq:
        condition: service_started

  rabbitmq:
    image: rabbitmq:3-management
    networks:
      - service_network
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_DEFAULT_VHOST: /

  bet_maker:
    networks:
      - service_network
    container_name: bet_maker
    build:
      context: .
    image: bet_maker
    depends_on:
      bet_maker_db:
        condition: service_healthy
    ports:
      - "8000:8000"
    stdin_open: true
    command: [ "python", ".", "--name", "bet_maker" ]

  line_provider:
    networks:
      - service_network
    container_name: line_provider
    image: bet_maker
    depends_on:
      line_provider_db:
        condition: service_healthy
    ports:
      - "8080:8080"
    stdin_open: true
    command: [ "python", ".", "--name", "line_provider" ]
